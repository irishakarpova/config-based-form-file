schema {
  query: Query
  mutation: Mutation
}

type Query {
  getBannersConfig: FormConfigResult
}
type Mutation {
  createNewBanner(fields: [FormFieldInput]!): [DataField]
}
input NewBannerInput {
  fields: [FormFieldInput]!
}
type Banner {
  id: Int
  brand: Int
  name: String
  language: Int
  size: Int
  welcomeBonus: Int
  bonusCategory: Int
  file: String
 }

type FormConfigResult {
  fields: [FormField]
  exportUrl: String
  options: [Option]
}


type Option {
  key: String
  value: String
  formConfig: FormConfigResult
}

type FormField {
  name: String!
  label: String
  type: String
  values: [FormFieldValue]
  defaultEmpty: Boolean
  value: String
}
type FormFieldValue {
  value: String
  text: String
}

type DataField {
  name: String
  value: String
}

input FormFieldInput {
  name: String!
  value: String
}
